<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> ///Initiate
//variables
health = 100;
spd_normal = 5;
spd_powerup = 10;
spd = spd_normal;
imgspd_normal = .5;
imgspd_powerup = 0;
imgspd = imgspd_normal;
firing = false;
rateOfFire = 10;
cooldown = 0;
//cooldownTime = 100;
cooldownTime = 100;
clipsize = 6;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = spd_normal;
if(spd = spd_normal)
{
/// Local Variables
var d = keyboard_check(ord('D'));
var a = keyboard_check(ord('A'));
var s = keyboard_check(ord('S'));
var w = keyboard_check(ord('W'));

/// Move Right
if (d){
    x += spd;
    
    sprite_index = spr_player_right;
    image_speed = imgspd;
}

/// Move Left
if (a) {
   
   x -= spd;
    
   sprite_index = spr_player_left;
   image_speed = imgspd;
   
}

/// Move Down
if (s) {
    
   y += spd;
   
   sprite_index = spr_player_down;
   image_speed = imgspd;
    
}

/// Move Up
if (w) {
    
    y -= spd;
    
    sprite_index = spr_player_up;
    image_speed = imgspd;
    
}
//Stop walking when stopped
if ( !w &amp;&amp; !s &amp;&amp; !a &amp;&amp; !d) {
    image_index = 0;
    image_speed = 0;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firing = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement

/// Local Variables
var d = keyboard_check(ord('D'));
var a = keyboard_check(ord('A'));
var s = keyboard_check(ord('S'));
var w = keyboard_check(ord('W'));


//Here we check if he has a speed power up and change his sprite accordingly
if (spd &gt; spd_normal){//Runs this if his speed is higher than the normal speed, changing his sprite

    /// Move Right
    if (d){
        x += spd;
        
        sprite_index = spr_player_right_spd;
        image_speed = imgspd;
    }
    
    /// Move Left
    if (a) {
       
       x -= spd;
        
       sprite_index = spr_player_left_spd;
       image_speed = imgspd;
       
    }
    
    /// Move Down
    if (s) {
        
       y += spd;
       
       sprite_index = spr_player_down_spd;
       image_speed = imgspd;
        
    }
    
    /// Move Up
    if (w) {
        
        y -= spd;
        
        sprite_index = spr_player_up_spd;
        image_speed = imgspd;
        
    }
    //Stop walking when stopped
    if ( !w &amp;&amp; !s &amp;&amp; !a &amp;&amp; !d) {
        image_index = 0;
        image_speed = 0;
    }
}else{ //uses the normal sprite if his speed is not above spd_normal
    /// Move Right
    if (d){
        x += spd;
        
        sprite_index = spr_player_right;
        image_speed = imgspd;
    }
    
    /// Move Left
    if (a) {
       
       x -= spd;
        
       sprite_index = spr_player_left;
       image_speed = imgspd;
       
    }
    
    /// Move Down
    if (s) {
        
       y += spd;
       
       sprite_index = spr_player_down;
       image_speed = imgspd;
        
    }
    
    /// Move Up
    if (w) {
        
        y -= spd;
        
        sprite_index = spr_player_up;
        image_speed = imgspd;
        
    }
    //Stop walking when stopped
    if ( !w &amp;&amp; !s &amp;&amp; !a &amp;&amp; !d) {
        image_index = 0;
        image_speed = 0;
    }
}//End of normal sprite

//Keep Within Room
x=clamp(x, 0, room_width);
y=clamp(y, 0, room_height);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Dead
if (health &lt;= 0) {
    global.nextroom = rm_main;
    instance_create(0,0,obj_fade);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Depth
depth = -y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_snowman">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health -= 1.5;

//score -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Firing Stuff

if(!firing){
    firing = true;   
    instance_create(x, y, obj_meatball);
    cooldown += 1;
    
    if (cooldown &gt;= clipsize){
        alarm[0]=cooldownTime;
        cooldown = 0;
    }
    else {
    alarm[0]=rateOfFire;
    }
    
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
